
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/maven-v4_0_0.xsd">
	<modelVersion>4.0.0</modelVersion>

	<name>Unreal 3/2004 Environment Installer</name>
	<groupId>nl.tudelft.goal</groupId>
	<artifactId>goal-ut-environment-installer</artifactId>
	<version>3.8.0</version>
	<packaging>pom</packaging>
	<url>https://github.com/eishub/UT3</url>
	<licenses>
		<license>
			<name>The GNU General Public License, Version 3.0</name>
			<url>http://www.gnu.org/licenses/gpl-3.0.txt</url>
		</license>
	</licenses>

	<developers>
		<developer>
			<name>Koen Hindriks</name>
			<email>k.v.hindriks@gmail.com</email>
			<organization>eishub</organization>
			<organizationUrl>https://github.com/koenhindriks</organizationUrl>
		</developer>
	</developers>

	<repositories>

		<repository>
			<id>eishub-mvn-repo</id>
			<url>https://raw.github.com/eishub/mvn-repo/master</url>
		</repository>
	</repositories>

	<organization>
		<name>eishub</name>
		<url>http://github.com/eishub</url>
	</organization>


	<issueManagement>
		<url>https://github.com/eishub/UT3/issues</url>
		<system>Github Unreal Environment Issues</system>
	</issueManagement>

	<scm>
		<connection>scm:git:git@github.com:eishub/UT3.git</connection>
		<developerConnection>scm:git:git@github.com:eishub/UT3.git</developerConnection>
		<url>https://github.com:eishub/UT3</url>
	</scm>

	<properties>
		<project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>

		<!-- Information for UT2004 environment to include in installer -->
		<environment.groupId>${project.groupId}</environment.groupId>
		<environment.artifactId>goal-ut2004-environment</environment.artifactId>
		<environment.version>3.5.8</environment.version>
		<environment.classifier>eis_environment</environment.classifier>

		<environment3.groupId>${project.groupId}</environment3.groupId>
		<environment3.artifactId>goal-ut3-environment</environment3.artifactId>
		<environment3.version>3.5.8</environment3.version>
		<environment3.classifier>eis_environment</environment3.classifier>

		<!-- Information for visualizer to include in installer -->
		<visualizer.groupId>${project.groupId}</visualizer.groupId>
		<visualizer.artifactId>goal-unreal-visualizer</visualizer.artifactId>
		<visualizer.version>3.5.7</visualizer.version>
		<visualizer.classifier>bin</visualizer.classifier>

		<!-- Information for documentation to include in installer -->
		<documentation.groupId>${project.groupId}</documentation.groupId>
		<documentation.artifactId>goal-ut-environment-documentation</documentation.artifactId>
		<documentation.version>3.5.8</documentation.version>
		<documentation.classifier>bin</documentation.classifier>

		<!-- Information for examples to include in installer -->
		<examples.groupId>${project.groupId}</examples.groupId>
		<examples.artifactId>goal-ut-environment-examples</examples.artifactId>
		<examples.version>3.5.9</examples.version>
		<examples.classifier>bin</examples.classifier>

		<!-- Information used by the installer -->
		<app.group>${project.groupId}</app.group>
		<app.name>${project.name}</app.name>
		<app.subpath>${project.artifactId}-${project.version}</app.subpath>
		<app.version>${project.version}</app.version>


		<staging.dir>${project.build.directory}/staging</staging.dir>

		<nl.tudelft.ii.svn>https://ii.tudelft.nl/svn</nl.tudelft.ii.svn>
		<gamebots.ut2004.svn>${nl.tudelft.ii.svn}/goal/UnrealEnvironment/v3/GameBotsUT2004</gamebots.ut2004.svn>
		<gamebots.ut3>https://github.com/pevers/GameBotsUT3/releases/download/v0.1-alpha/GameBotsUT3.u</gamebots.ut3>
	</properties>

	<!-- Disabled dependencies. When active IzPack looks for Saxon Dom writer. -->
	<!-- <dependencies> <dependency> <groupId>${visualizer.groupId}</groupId> 
		<artifactId>${visualizer.artifactId}</artifactId> <version>${visualizer.version}</version> 
		<type>zip</type> <classifier>${visualizer.classifier}</classifier> </dependency> 
		<dependency> <groupId>${environment.groupId}</groupId> <artifactId>${environment.artifactId}</artifactId> 
		<version>${environment.version}</version> <type>jar</type> <classifier>${environment.classifier}</classifier> 
		</dependency> <dependency> <groupId>${documentation.groupId}</groupId> <artifactId>${documentation.artifactId}</artifactId> 
		<version>${documentation.version}</version> <type>zip</type> <classifier>${documentation.classifier}</classifier> 
		</dependency> </dependencies> -->


	<build>
		<plugins>

			<!-- Copy resources (Izpack configuration e.d) from source to staging 
				area -->
			<plugin>
				<artifactId>maven-resources-plugin</artifactId>
				<version>2.5</version>
				<executions>
					<execution>
						<id>copy-install-resources</id>
						<phase>process-resources</phase>
						<goals>
							<goal>copy-resources</goal>
						</goals>
						<configuration>
							<overwrite>true</overwrite>
							<outputDirectory>${staging.dir}</outputDirectory>
							<resources>
								<resource>
									<directory>src/main/izpack</directory>
									<filtering>true</filtering>
									<includes>
										<include>**/*.xml</include>
									</includes>
								</resource>
								<resource>
									<directory>src/main/izpack</directory>
									<filtering>false</filtering>
									<excludes>
										<exclude>**/*.xml</exclude>
									</excludes>
								</resource>
								<resource>
									<directory>src/main/resources</directory>
								</resource>

							</resources>
						</configuration>
					</execution>
				</executions>
			</plugin>


			<!-- Download Gamebots 2004 from SVN ! -->
			<plugin>
				<artifactId>maven-scm-plugin</artifactId>
				<version>1.5</version>
				<executions>
					<execution>
						<id>svn-gamebots-ut2004-staging</id>
						<phase>process-resources</phase>
						<goals>
							<goal>checkout</goal>
						</goals>
						<configuration>
							<skipCheckoutIfExists>false</skipCheckoutIfExists>
							<connectionUrl>
								scm:svn:${gamebots.ut2004.svn}
							</connectionUrl>
							<checkoutDirectory>${staging.dir}/GameBotsUT2004</checkoutDirectory>
						</configuration>
					</execution>
				</executions>
			</plugin>

			<!-- Download GameBots UT3 compiled version from Peter's git project. -->
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-antrun-plugin</artifactId>
				<executions>
					<execution>
						<id>download-ut3-gamebots</id>
						<phase>prepare-package</phase>
						<goals>
							<goal>run</goal>
						</goals>
						<configuration>
							<tasks>
								<mkdir dir="${staging.dir}/GameBotsUT3/UTGame/CookedPC/" />
								<get src="${gamebots.ut3}"
									dest="${staging.dir}/GameBotsUT3/UTGame/CookedPC/GameBotsUT3.u"
									verbose="false" usetimestamp="true" />
							</tasks>
						</configuration>
					</execution>
				</executions>
			</plugin>

			<!-- Fetch Gamebots from SVN TODO change checkout to export <plugin> <artifactId>maven-scm-plugin</artifactId> 
				<version>1.5</version> <configuration> <providerImplementations> <svn>javasvn</svn> 
				</providerImplementations> </configuration> <dependencies> <dependency> <groupId>com.google.code.maven-scm-provider-svnjava</groupId> 
				<artifactId>maven-scm-provider-svnjava</artifactId> <version>1.9</version> 
				</dependency> </dependencies> </plugin>! -->

			<!-- Fetch visualizer, environment, documentation and examples -->
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-dependency-plugin</artifactId>
				<version>2.5.1</version>

				<!-- Unpack environment, documentation and examples -->
				<executions>
					<execution>
						<id>unpack-visualizer-bundle</id>
						<phase>process-resources</phase>
						<goals>
							<goal>unpack</goal>
						</goals>
						<configuration>
							<artifactItems>
								<artifactItem>
									<groupId>${visualizer.groupId}</groupId>
									<artifactId>${visualizer.artifactId}</artifactId>
									<version>${visualizer.version}</version>
									<classifier>${visualizer.classifier}</classifier>
									<type>zip</type>
									<overWrite>true</overWrite>
									<outputDirectory>${staging.dir}/visualizer</outputDirectory>
								</artifactItem>

								<artifactItem>
									<groupId>${documentation.groupId}</groupId>
									<artifactId>${documentation.artifactId}</artifactId>
									<version>${documentation.version}</version>
									<type>zip</type>
									<classifier>${documentation.classifier}</classifier>
									<overWrite>true</overWrite>
									<outputDirectory>${staging.dir}/documentation</outputDirectory>
								</artifactItem>

								<artifactItem>
									<groupId>${examples.groupId}</groupId>
									<artifactId>${examples.artifactId}</artifactId>
									<version>${examples.version}</version>
									<type>zip</type>
									<classifier>${examples.classifier}</classifier>
									<overWrite>true</overWrite>
									<outputDirectory>${staging.dir}/examples</outputDirectory>
								</artifactItem>
							</artifactItems>
						</configuration>
					</execution>

					<!-- Fecth and copy the Environment -->
					<execution>
						<id>copy-environment</id>
						<phase>process-resources</phase>
						<goals>
							<goal>copy</goal>
						</goals>
						<configuration>
							<artifactItems>
								<!-- <artifactItem> <groupId>${environment.groupId}</groupId> <artifactId>${environment.artifactId}</artifactId> 
									<version>${environment.version}</version> <type>jar</type> <classifier>${environment.classifier}</classifier> 
									<overWrite>true</overWrite> <outputDirectory>${staging.dir}/ut2004environment</outputDirectory> 
									<destFileName>${environment.artifactId}-${environment.version}.jar</destFileName> 
									</artifactItem> -->

								<!-- ut2004env but without the version, for inclusion with the example 
									#3497 -->
								<artifactItem>
									<groupId>${environment.groupId}</groupId>
									<artifactId>${environment.artifactId}</artifactId>
									<version>${environment.version}</version>
									<type>jar</type>
									<classifier>${environment.classifier}</classifier>
									<overWrite>true</overWrite>
									<outputDirectory>${staging.dir}/ut2004environment</outputDirectory>
									<destFileName>${environment.artifactId}.jar</destFileName>
								</artifactItem>

								<!-- <artifactItem> <groupId>${environment3.groupId}</groupId> <artifactId>${environment3.artifactId}</artifactId> 
									<version>${environment3.version}</version> <type>jar</type> <classifier>${environment3.classifier}</classifier> 
									<overWrite>true</overWrite> <outputDirectory>${staging.dir}/ut3environment</outputDirectory> 
									<destFileName>${environment3.artifactId}-${environment.version}.jar</destFileName> 
									</artifactItem> -->

								<!-- ut3env but without the version, for inclusion with the example 
									#3497 -->

								<artifactItem>
									<groupId>${environment3.groupId}</groupId>
									<artifactId>${environment3.artifactId}</artifactId>
									<version>${environment3.version}</version>
									<type>jar</type>
									<classifier>${environment3.classifier}</classifier>
									<overWrite>true</overWrite>
									<outputDirectory>${staging.dir}/ut3environment</outputDirectory>
									<destFileName>${environment3.artifactId}.jar</destFileName>
								</artifactItem>

							</artifactItems>
						</configuration>
					</execution>
				</executions>
			</plugin>



			<!--Configure ezpack -->
			<plugin>
				<groupId>org.codehaus.izpack</groupId>
				<artifactId>izpack-maven-plugin</artifactId>
				<version>1.0-alpha-5</version>

				<!-- Set staging directory, everything ezpack packs together goes here -->
				<configuration>
					<izpackBasedir>${staging.dir}</izpackBasedir>
				</configuration>

				<executions>
					<execution>
						<id>standard-installer</id>
						<phase>package</phase>
						<goals>
							<goal>izpack</goal>
						</goals>
					</execution>
				</executions>
				<dependencies>
					<dependency>
						<groupId>org.codehaus.izpack</groupId>
						<artifactId>izpack-standalone-compiler</artifactId>
						<version>4.3.4</version>
					</dependency>


				</dependencies>
			</plugin>


			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-deploy-plugin</artifactId>
				<version>2.8.2</version>
				<configuration>
					<altDeploymentRepository>internal.repo::default::file://${project.build.directory}/mvn-repo</altDeploymentRepository>
				</configuration>
			</plugin>

			<plugin>
				<groupId>com.github.github</groupId>
				<artifactId>site-maven-plugin</artifactId>
				<version>0.10</version>
				<configuration>
					<server>github</server>
					<!-- git commit message -->
					<message>Maven artifacts for ${project.name} version
						${project.version}</message>
					<!-- matches distribution management repository url above -->
					<outputDirectory>${project.build.directory}/mvn-repo</outputDirectory>
					<!-- remote branch name -->
					<branch>refs/heads/master</branch>
					<merge>true</merge>
					<includes>
						<include>**/*</include>
					</includes>
					<!-- github repo name -->
					<repositoryName>mvn-repo</repositoryName>
					<!-- github organization -->
					<repositoryOwner>eishub</repositoryOwner>
				</configuration>
				<executions>
					<!-- run site-maven-plugin as part of the build's 'deploy' phase -->
					<execution>
						<goals>
							<goal>site</goal>
						</goals>
						<phase>deploy</phase>
					</execution>
				</executions>
			</plugin>

		</plugins>
	</build>




</project>
